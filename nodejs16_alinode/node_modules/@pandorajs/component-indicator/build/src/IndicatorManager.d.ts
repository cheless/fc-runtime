import { IIndicator, IndicatorResultObject } from './types';
import { IndicatorManagerProxy } from './IndicatorManagerProxy';
export declare class IndicatorManager {
    store: Map<string, IIndicator[]>;
    ctx: any;
    proxy: IndicatorManagerProxy;
    constructor(ctx: any);
    register(indicator: IIndicator): void;
    get(group: string): IIndicator[];
    invokeRaw(group: string, query?: any): Promise<IndicatorResultObject[]>;
    invoke(group: string, query?: any): Promise<IndicatorResultObject[]>;
    invokeAllProcessesRaw(group: string, query?: any): Promise<IndicatorResultObject[]>;
    invokeAllProcesses(group: string, query?: any): Promise<IndicatorResultObject[]>;
    publish(): Promise<void>;
}
//# sourceMappingURL=IndicatorManager.d.ts.map