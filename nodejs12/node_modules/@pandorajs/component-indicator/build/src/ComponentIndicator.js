"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __exportStar = (this && this.__exportStar) || function(m, exports) {
    for (var p in m) if (p !== "default" && !exports.hasOwnProperty(p)) __createBinding(exports, m, p);
};
Object.defineProperty(exports, "__esModule", { value: true });
const component_decorator_1 = require("@pandorajs/component-decorator");
const IndicatorManager_1 = require("./IndicatorManager");
const dollar_1 = require("@pandorajs/dollar");
let ComponentIndicator = class ComponentIndicator {
    constructor(ctx) {
        this.ctx = ctx;
        this.indicatorManager = new IndicatorManager_1.IndicatorManager(ctx);
        ctx.indicatorManager = this.indicatorManager;
    }
    async startAtSupervisor() {
        await this.publish();
    }
    async start() {
        await this.publish();
    }
    async publish() {
        try {
            await this.indicatorManager.publish();
            dollar_1.consoleLogger.info('Indicator manager published on IPC hub at PID ' + process.pid);
        }
        catch (err) {
            dollar_1.consoleLogger.warn('Indicator manager publish failed on IPC hub at PID ' +
                process.pid +
                ', ' +
                err);
        }
    }
};
ComponentIndicator = __decorate([
    component_decorator_1.componentName('indicator'),
    component_decorator_1.dependencies(['ipcHub'])
], ComponentIndicator);
exports.default = ComponentIndicator;
__exportStar(require("./types"), exports);
__exportStar(require("./IndicatorManager"), exports);
__exportStar(require("./IndicatorManagerProxy"), exports);
__exportStar(require("./IndicatorUtil"), exports);
//# sourceMappingURL=ComponentIndicator.js.map