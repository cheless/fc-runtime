export declare const promise: {
    fromCallback(cb: any): Promise<any>;
    delay(ms: number): Promise<any>;
    defer(): {
        resolve: any;
        reject: any;
        promise: Promise<unknown>;
    };
};
export declare function makeRequire(dir: any): any;
export declare function resolveSymlink(targetPath: any): any;
export declare class MyConsole extends console.Console {
    constructor();
    important(msg: any, ...more: any[]): void;
    error(msg: any, ...more: any[]): void;
    warn(msg: any, ...more: any[]): void;
    info(msg: any, ...more: any[]): void;
}
export declare const consoleLogger: MyConsole;
export declare const avoidLogger: {
    log(): void;
    warn(): void;
    error(): void;
    info(): void;
    important(): void;
};
export declare function startsWith(str: any, target: any, position?: number): boolean;
export declare function extractInt(str: any): number;
//# sourceMappingURL=index.d.ts.map