import { ObjectDescription, ObjectProxyBehaviour } from '../types';
/**
 * ObjectProxyBehaviourManager
 * Unified management of all Object Proxy Behaviour through Remote and Proxy
 */
export declare class ObjectProxyBehaviourManager {
    protected idToBehaviour: Map<string, ObjectProxyBehaviour>;
    /**
     * Set a Behaviour for an ObjectDescription
     * @param {ObjectDescription} objectDescription
     * @param {ObjectProxyBehaviour} behaviour
     */
    setBehaviour(objectDescription: ObjectDescription, behaviour: ObjectProxyBehaviour): void;
    /**
     * Remove a Behaviour by an ObjectDescription
     * @param {ObjectDescription} objectDescription
     * @param {ObjectProxyBehaviour} behaviour
     */
    removeBehaviour(objectDescription: ObjectDescription): void;
    /**
     * Get the Behaviour by an ObjectDescription
     * Default as DefaultObjectProxyBehaviour if there not set Behaviour for this ObjectDescription
     * @param {ObjectDescription} objectDescription
     * @param {ObjectProxyBehaviour} behaviour
     */
    getBehaviour(objectDescription: ObjectDescription): ObjectProxyBehaviour;
    private static instance;
    static getInstance(): ObjectProxyBehaviourManager;
}
//# sourceMappingURL=ObjectProxyBehaviourManager.d.ts.map