"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ActuatorRestServer = void 0;
const KOA = require("koa");
const bodyParser = require("koa-bodyparser");
const Router = require("koa-router");
class ActuatorRestServer {
    constructor(ctx) {
        this.config = ctx.config.actuatorServer;
        this.app = new KOA();
    }
    start() {
        const httpConfig = this.config.http;
        const app = this.app;
        if (httpConfig.middlewares) {
            httpConfig.middlewares.forEach(middleware => {
                app.use(middleware);
            });
        }
        else {
            app.use(bodyParser());
        }
        const homeRouter = new Router();
        homeRouter.get('/', async (ctx) => {
            ctx.body = 'Pandora restful service start successful';
        });
        app.use(homeRouter.routes());
        app.use(async (ctx, next) => {
            ctx.ok = data => {
                ctx.body = {
                    data,
                    timestamp: Date.now(),
                    success: true,
                    message: '',
                };
            };
            ctx.fail = message => {
                ctx.body = {
                    success: false,
                    timestamp: Date.now(),
                    message,
                };
            };
            await next();
        });
        if (httpConfig.enabled) {
            return new Promise(resolve => {
                this.server = app.listen({
                    host: httpConfig.host,
                    port: httpConfig.port,
                }, resolve);
            });
        }
    }
    use(mid) {
        this.app.use(mid);
    }
    stop() {
        if (this.server) {
            this.server.close();
            this.server = null;
        }
    }
}
exports.ActuatorRestServer = ActuatorRestServer;
//# sourceMappingURL=ActuatorRestServer.js.map